<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lambo.rest.client.dao.api.RestSettingMapper">
  <resultMap id="BaseResultMap" type="com.lambo.rest.client.model.RestSetting">
    <id column="rest_id" jdbcType="VARCHAR" property="restId" />
    <result column="rest_name" jdbcType="VARCHAR" property="restName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="operation_type" jdbcType="VARCHAR" property="operationType" />
    <result column="datasource" jdbcType="VARCHAR" property="datasource" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lambo.rest.client.model.RestSetting">
    <result column="rest_sql" jdbcType="LONGVARCHAR" property="restSql" />
    <result column="mock_data" jdbcType="LONGVARCHAR" property="mockData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rest_id, rest_name, url, operation_type, datasource, note, create_time, update_time, 
    create_user
  </sql>
  <sql id="Blob_Column_List">
    rest_sql, mock_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lambo.rest.client.model.RestSettingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rest_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lambo.rest.client.model.RestSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from rest_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rest_setting
    where rest_id = #{restId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rest_setting
    where rest_id = #{restId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lambo.rest.client.model.RestSetting">
    insert into rest_setting (rest_id, rest_name, url, 
      operation_type, datasource, note, 
      create_time, update_time, create_user, 
      rest_sql, mock_data)
    values (#{restId,jdbcType=VARCHAR}, #{restName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{operationType,jdbcType=VARCHAR}, #{datasource,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{restSql,jdbcType=LONGVARCHAR}, #{mockData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lambo.rest.client.model.RestSetting">
    insert into rest_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="restId != null">
        rest_id,
      </if>
      <if test="restName != null">
        rest_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="operationType != null">
        operation_type,
      </if>
      <if test="datasource != null">
        datasource,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="restSql != null">
        rest_sql,
      </if>
      <if test="mockData != null">
        mock_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="restId != null">
        #{restId,jdbcType=VARCHAR},
      </if>
      <if test="restName != null">
        #{restName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="datasource != null">
        #{datasource,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="restSql != null">
        #{restSql,jdbcType=LONGVARCHAR},
      </if>
      <if test="mockData != null">
        #{mockData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lambo.rest.client.model.RestSetting">
    update rest_setting
    <set>
      <if test="restName != null">
        rest_name = #{restName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        operation_type = #{operationType,jdbcType=VARCHAR},
      </if>
      <if test="datasource != null">
        datasource = #{datasource,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="restSql != null">
        rest_sql = #{restSql,jdbcType=LONGVARCHAR},
      </if>
      <if test="mockData != null">
        mock_data = #{mockData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where rest_id = #{restId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lambo.rest.client.model.RestSetting">
    update rest_setting
    set rest_name = #{restName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      operation_type = #{operationType,jdbcType=VARCHAR},
      datasource = #{datasource,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      rest_sql = #{restSql,jdbcType=LONGVARCHAR},
      mock_data = #{mockData,jdbcType=LONGVARCHAR}
    where rest_id = #{restId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lambo.rest.client.model.RestSetting">
    update rest_setting
    set rest_name = #{restName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      operation_type = #{operationType,jdbcType=VARCHAR},
      datasource = #{datasource,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR}
    where rest_id = #{restId,jdbcType=VARCHAR}
  </update>
</mapper>