<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lambo.mq.client.dao.api.MqCompensateMapper">
  <resultMap id="BaseResultMap" type="com.lambo.mq.client.model.MqCompensate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="keys" jdbcType="VARCHAR" property="keys" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lambo.mq.client.model.MqCompensate">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic, tag, keys, status, cause, create_date
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lambo.mq.client.model.MqCompensateExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mq_compensate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lambo.mq.client.model.MqCompensateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from mq_compensate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mq_compensate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mq_compensate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lambo.mq.client.model.MqCompensate">
    insert into mq_compensate (id, topic, tag, 
      keys, status, cause, create_date, 
      message)
    values (#{id,jdbcType=INTEGER}, #{topic,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{keys,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{cause,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lambo.mq.client.model.MqCompensate">
    insert into mq_compensate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topic != null">
        topic,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="keys != null">
        keys,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="cause != null">
        cause,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="keys != null">
        #{keys,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lambo.mq.client.model.MqCompensate">
    update mq_compensate
    <set>
      <if test="topic != null">
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="keys != null">
        keys = #{keys,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lambo.mq.client.model.MqCompensate">
    update mq_compensate
    set topic = #{topic,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      keys = #{keys,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      cause = #{cause,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lambo.mq.client.model.MqCompensate">
    update mq_compensate
    set topic = #{topic,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      keys = #{keys,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      cause = #{cause,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>