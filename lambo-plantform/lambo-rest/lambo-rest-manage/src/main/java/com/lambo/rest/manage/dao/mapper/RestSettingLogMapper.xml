<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lambo.rest.manage.dao.api.RestSettingLogMapper">
  <resultMap id="BaseResultMap" type="com.lambo.rest.manage.model.RestSettingLog">
    <id column="log_id" jdbcType="VARCHAR" property="logId" />
    <result column="rest_id" jdbcType="VARCHAR" property="restId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="datasource" jdbcType="VARCHAR" property="datasource" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="host_ip" jdbcType="VARCHAR" property="hostIp" />
    <result column="host_name" jdbcType="VARCHAR" property="hostName" />
    <result column="host_mac" jdbcType="VARCHAR" property="hostMac" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lambo.rest.manage.model.RestSettingLog">
    <result column="rest_sql" jdbcType="LONGVARCHAR" property="restSql" />
    <result column="mock_data" jdbcType="LONGVARCHAR" property="mockData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, rest_id, url, datasource, note, time, user, host_ip, host_name, host_mac
  </sql>
  <sql id="Blob_Column_List">
    rest_sql, mock_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lambo.rest.manage.model.RestSettingLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rest_setting_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lambo.rest.manage.model.RestSettingLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from rest_setting_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rest_setting_log
    where log_id = #{logId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rest_setting_log
    where log_id = #{logId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lambo.rest.manage.model.RestSettingLogExample">
    delete from rest_setting_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lambo.rest.manage.model.RestSettingLog">
    insert into rest_setting_log (log_id, rest_id, url, 
      datasource, note, time, 
      user, host_ip, host_name, 
      host_mac, rest_sql, mock_data
      )
    values (#{logId,jdbcType=VARCHAR}, #{restId,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{datasource,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{user,jdbcType=VARCHAR}, #{hostIp,jdbcType=VARCHAR}, #{hostName,jdbcType=VARCHAR}, 
      #{hostMac,jdbcType=VARCHAR}, #{restSql,jdbcType=LONGVARCHAR}, #{mockData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lambo.rest.manage.model.RestSettingLog">
    insert into rest_setting_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="restId != null">
        rest_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="datasource != null">
        datasource,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="hostIp != null">
        host_ip,
      </if>
      <if test="hostName != null">
        host_name,
      </if>
      <if test="hostMac != null">
        host_mac,
      </if>
      <if test="restSql != null">
        rest_sql,
      </if>
      <if test="mockData != null">
        mock_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="restId != null">
        #{restId,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="datasource != null">
        #{datasource,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null">
        #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="hostMac != null">
        #{hostMac,jdbcType=VARCHAR},
      </if>
      <if test="restSql != null">
        #{restSql,jdbcType=LONGVARCHAR},
      </if>
      <if test="mockData != null">
        #{mockData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update rest_setting_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.restId != null">
        rest_id = #{record.restId,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.datasource != null">
        datasource = #{record.datasource,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.user != null">
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.hostIp != null">
        host_ip = #{record.hostIp,jdbcType=VARCHAR},
      </if>
      <if test="record.hostName != null">
        host_name = #{record.hostName,jdbcType=VARCHAR},
      </if>
      <if test="record.hostMac != null">
        host_mac = #{record.hostMac,jdbcType=VARCHAR},
      </if>
      <if test="record.restSql != null">
        rest_sql = #{record.restSql,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.mockData != null">
        mock_data = #{record.mockData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update rest_setting_log
    set log_id = #{record.logId,jdbcType=VARCHAR},
      rest_id = #{record.restId,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      datasource = #{record.datasource,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      user = #{record.user,jdbcType=VARCHAR},
      host_ip = #{record.hostIp,jdbcType=VARCHAR},
      host_name = #{record.hostName,jdbcType=VARCHAR},
      host_mac = #{record.hostMac,jdbcType=VARCHAR},
      rest_sql = #{record.restSql,jdbcType=LONGVARCHAR},
      mock_data = #{record.mockData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rest_setting_log
    set log_id = #{record.logId,jdbcType=VARCHAR},
      rest_id = #{record.restId,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      datasource = #{record.datasource,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      user = #{record.user,jdbcType=VARCHAR},
      host_ip = #{record.hostIp,jdbcType=VARCHAR},
      host_name = #{record.hostName,jdbcType=VARCHAR},
      host_mac = #{record.hostMac,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lambo.rest.manage.model.RestSettingLog">
    update rest_setting_log
    <set>
      <if test="restId != null">
        rest_id = #{restId,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="datasource != null">
        datasource = #{datasource,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="hostIp != null">
        host_ip = #{hostIp,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        host_name = #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="hostMac != null">
        host_mac = #{hostMac,jdbcType=VARCHAR},
      </if>
      <if test="restSql != null">
        rest_sql = #{restSql,jdbcType=LONGVARCHAR},
      </if>
      <if test="mockData != null">
        mock_data = #{mockData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lambo.rest.manage.model.RestSettingLog">
    update rest_setting_log
    set rest_id = #{restId,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      datasource = #{datasource,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      host_ip = #{hostIp,jdbcType=VARCHAR},
      host_name = #{hostName,jdbcType=VARCHAR},
      host_mac = #{hostMac,jdbcType=VARCHAR},
      rest_sql = #{restSql,jdbcType=LONGVARCHAR},
      mock_data = #{mockData,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lambo.rest.manage.model.RestSettingLog">
    update rest_setting_log
    set rest_id = #{restId,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      datasource = #{datasource,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      host_ip = #{hostIp,jdbcType=VARCHAR},
      host_name = #{hostName,jdbcType=VARCHAR},
      host_mac = #{hostMac,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
</mapper>